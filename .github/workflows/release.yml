name: Release

on:
  push:
    branches:
      - main
      - beta

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      TARGET_BRANCH: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Capture current version
        id: current_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Read version from package.json
        id: pkg
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Determine if release was published
        id: release_check
        env:
          PREV_VERSION: ${{ steps.current_version.outputs.version }}
          NEW_VERSION: ${{ steps.pkg.outputs.version }}
        run: |
          if [ -z "$NEW_VERSION" ] || [ "$NEW_VERSION" = "$PREV_VERSION" ]; then
            echo "released=false" >> "$GITHUB_OUTPUT"
          else
            echo "released=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up QEMU
        if: ${{ steps.release_check.outputs.released == 'true' }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: ${{ steps.release_check.outputs.released == 'true' }}
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        if: ${{ steps.release_check.outputs.released == 'true' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-arch Docker image
        if: ${{ steps.release_check.outputs.released == 'true' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.pkg.outputs.version }}
            ${{ env.TARGET_BRANCH == 'beta' && format('ghcr.io/{0}/{1}:beta', github.repository_owner, github.event.repository.name) || '' }}
            ${{ env.TARGET_BRANCH != 'beta' && format('ghcr.io/{0}/{1}:latest', github.repository_owner, github.event.repository.name) || '' }}
